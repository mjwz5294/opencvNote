apt-get包管理通过source.list文件获取源。关于修改和更新源文件，请查看 UbuntuHelp:SourcesList
引子
“起初 GNU/Linux 的世界中只有 .tar.gz。如果用户要使用一个软件，那就必须自己编译。当 Debian 诞生以后，一种能管理操作系统中已安装的软件包的系统显得很有必要，这个系统被命名为‘dpkg’。‘软件包’一词在此第一次出现在 GNU/Linux。不久之后，红帽公司创建了他们自己的包管理系统‘rpm’。
“GNU/Linux 的创造者们很快又陷入了新的窘境。他们希望通过一种快捷、实用而且高效的方式来安装软件包，并能自动处理相互之间的依赖关系，还要在软件包升级过程中维护好配置文件。Debian 又一次充当了开路先锋的角色，她首创了 APT（Advanced Packaging Tool，高级软件包管理工具）。这一工具后来被 Conectiva 移植到红帽公司的 rpm 包管理系统。在其他一些发行版中，我们也能看到 APT 的身影。”
-- 引自：Debian APT HOWTO
命令
以下命令需要在前面加上 sudo 以获得 root 权限。 根据实际情况，替换“软件包名称”或“字符串”为具体内容。
软件包维护
apt-get update - 在你更改了/etc/apt/sources.list 或 /etc/apt/preferences 后，需要运行这个命令以令改动生效。同时也要定期运行该命令，以确保你的源列表是最新的。该命令等价于新立得软件包管理器中的“刷新”，或者是 Windows和OS X 下的 Adept 软件包管理器的 “check for updates”。
apt-get upgrade - 更新所有已安装的软件包。类似一条命令完成了新立得软件包管理器中的“标记所有软件包以便升级”并且“应用”。
apt-get dist-upgrade - 更新整个系统到最新的发行版。等价于在新立得软件包管理器中“标记所有更新”，并在首选项里选择“智能升级” -- 这是告诉APT更新到最新包，甚至会删除其他包（注：不建议使用这种方式更新到新的发行版）。
apt-get -f install -- 等同于新立得软件包管理器中的“编辑->修正（依赖关系）损毁的软件包”再点击“应用。如果提示“unmet dependencies”的时候，可执行这行命令。
apt-get autoclean - 如果你的硬盘空间不大的话，可以定期运行这个程序，将已经删除了的软件包的.deb安装文件从硬盘中删除掉。如果你仍然需要硬盘空间的话，可以试试apt-get clean，这会把你已安装的软件包的安装包也删除掉，当然多数情况下这些包没什么用了，因此这是个为硬盘腾地方的好办法。
apt-get clean 类似上面的命令，但它删除包缓存中的所有包。这是个很好的做法，因为多数情况下这些包没有用了。但如果你是拨号上网的话，就得重新考虑了。
包缓存的路径为/var/cache/apt/archives，因此，du -sh /var/cache/apt/archives将告诉你包缓存所占用的硬盘空间。
dpkg-reconfigure foo - 重新配置“foo”包。这条命令很有用。当一次配置很多包的时候， 要回答很多问题，但有的问题事先并不知道。例如，dpkg-reconfigure fontconfig-config，在Ubuntu系统中显示字体配置向导。每次我安装完一个 Ubuntu 系统，我都会运行这行命令，因为我希望位图字体在我的所有应用程序上都有效。
echo "foo hold" | dpkg --set-selections - 设置包“foo”为hold，不更新这个包，保持当前的版本，当前的状态，当前的一切。类似新立得软件包管理器中的“软件包->锁定版本”。
注： apt-get dist-upgrade 会覆盖上面的设置，但会事先提示。 另外，你必须使用 sudo。输入命令echo "foo hold" | sudo dpkg --set-selections而不是sudo echo "foo hold" | dpkg --set-selections
echo "foo install -- 删除“hold”“locked package”状态设置。命令行为echo "foo install" | sudo dpkg --set-selections
apt-show-versions -u apt-show-versions工具可以告诉你系统中哪些包可以更新以及其它 一些有用的信息。-u选项可以显示可更新软件包列表,这个工具默认没有安装，但是每次update完了以后，用这个工具看看非常方便，值得一装。
软件包删除
apt-get remove 软件包名称 - 删除已安装的软件包（保留配置文件）
apt-get --purge remove 软件包名称 - 删除已安装包（不保留配置文件）
特别技巧：如果你想在删除‘foo’包同时安装‘bar’： apt-get --purge remove foo bar+。
apt-get autoremove - 删除为了满足其他软件包的依赖而安装的，但现在不再需要的软件包。
软件包搜索
apt-cache search foo - 搜索和"foo"匹配的包。
apt-cache show foo - 显示"foo"包的相关信息，例如描述、版本、大小、依赖以及冲突。
dpkg --print-avail 软件包名称 - 与上面类似。
dpkg -l *foo* - 查找包含有"foo"字样的包。与apt-cache show foo类似，但是还会显示每个包是安装了还是没安装。
dpkg -l package-name-pattern - 列出名为package-name-pattern的软件包。除非你知道软件包的正确全称，否则可以使用“*package-name-pattern*”.
dpkg -L foo - 显示名为“foo”的包都安装了哪些文件以及它们的路径，很有用的命令。
dlocate foo - 在已安装的包中搜索“foo”的文件。对于回答“这个文件来源于哪个包”这个问题，是非常实用的。dlocate是一个软件包，必须安装它才能使用本命令。
dpkg -S foo - 和上面的命令一样，但相比更慢一些。他只能在Debian或Ubuntu系统下运行。另外，不需要安装dlocate包。
apt-file search foo - 类似dlocate和dpkg -S，但搜索所有有效软件包，不单单只是你系统上的已安装的软件包。-- 它所回答的问题是“哪些软件包提供这些文件”。你必须安装有apt-file软件包，并且确保apt-file数据库是最新的。
dpkg -c foo.deb - “foo.deb”包含有哪些文件？注：foo.deb是含路径的文件名。-- 这个是针对你自己下载的.deb包。
apt-cache dumpavail - 显示所有可用软件包，以及它们各自的详细信息（会产生很多输出）。
apt-cache show 软件包名称 - 显示软件包记录，类似dpkg --print-avail 软件包名称。
apt-cache pkgnames - 快速列出已安装的软件包名称。
apt-file search filename - 查找包含特定文件的软件包（不一定是已安装的），这些文件的文件名中含有指定的字符串。apt-file是一个独立的软件包。您必须先使用 apt-get install 来安装它，然后运行 apt-file update。如果 apt-file search filename 输出的内容太多，您可以尝试使用 apt-file search filename | grep -w filename（只显示指定字符串作为完整的单词出现在其中的那些文件名）或者类似方法，例如：apt-file search filename | grep /bin/（只显示位于诸如/bin或/usr/bin这些文件夹中的文件，如果您要查找的是某个特定的执行文件的话，这样做是有帮助的）。
典型应用
我是个赛车发烧友，想装个赛车类游戏玩玩。有哪些赛车类游戏可供选择呢？
apt-cache search racing game
出来了一大堆结果。我看到有个游戏叫做“torcs”，看看有没有更多信息。
apt-cache show torcs
看上去不错。这个游戏是不是已经安装了？最新版本是多少？它从哪个源得到，universe还是main?
apt-cache policy torcs
好吧，现在我要来安装它！
apt-get install torcs
在控制台下我应该调用什么命令来运行这个游戏呢？在这个例子中，直接用“torcs”就行了，但并不是每次都这么简单。我们可以通过查找哪些文件被安装到了 “/usr/bin”文件夹下来确定二进制文件名。对于游戏软件，这些二进制文件将被安装到“/usr/games”下面。对于系统管理工具相应的文件夹是“/usr/sbin”。
dpkg -L torcs|grep /usr/games/
这个命令的前面一部分显示软件包“torcs”安装的所有文件（您自己试试看）。通过命令的第二部分，我们告诉系统只显示前一部分的输出结果中含有“/usr/games”的那些行。
这个游戏很酷哦。说不定还有其他赛道可玩的？
apt-cache search torcs
我的磁盘空间不够用了。我得把apt的缓存空间清空才行。
apt-get clean
哦不，老妈叫我把机器上的所有游戏都删掉。但是我想把配置文件保留下来，这样下次我想玩的时候只要重装一下就可以了。 uuuuuuuuu
apt-get remove torcs
如果我想连配置文件一块删除：
apt-get remove --purge torcs
多余的软件包
deborphan和debfoster工具可以找出已经安装在系统上孤立、无用的软件包。
提高命令行方式下的工作效率
您可以通过定义别名（alias）来提高这些命令的输入速度。例如，您可以在您的*~/.bashrc*文件中添加下列内容
alias acs='apt-cache search'
alias agu='sudo apt-get update'
alias agg='sudo apt-get upgrade'
alias agd='sudo apt-get dist-upgrade'
alias agi='sudo apt-get install'
alias agr='sudo apt-get remove'
或者使用前面介绍的aptitude命令，如“alias agi='sudo aptitude install'”。
为apt-get设置http代理
可以通过三种方法为apt-get设置http代理
注意：在Ubuntu 10.10及以后版本中，apt-get不再读取$http_proxy变量，因此只能使用方法2设置apt-get代理。另外，如果使用新立得软件包管理器，则可以在新立得中设置网络代理（设置——首选项——网络）
方法一
这是一种临时的手段，如果您仅仅是暂时需要通过http代理使用apt-get，您可以使用这种方式。
在使用apt-get之前，在终端中输入以下命令（根据您的实际情况替换yourproxyaddress和proxyport）。
export http_proxy=http://yourproxyaddress:proxyport
方法二
这种方法要用到/etc/apt/文件夹下的apt.conf文件。如果您希望apt-get（而不是其他应用程序）一直使用http代理，您可以使用这种方式。
注意： 某些情况下，系统安装过程中没有建立apt配置文件。下面的操作将视情况修改现有的配置文件或者新建配置文件。
gksudo gedit /etc/apt/apt.conf
在您的apt.conf文件中加入下面这行（根据你的实际情况替换yourproxyaddress和proxyport）。
Acquire::http::Proxy "http://yourproxyaddress:proxyport";
保存apt.conf文件。
方法三
这种方法会在您的主目录下的.bashrc文件中添加两行。如果您希望apt-get和其他应用程序如wget等都使用http代理，您可以使用这种方式。
gedit ~/.bashrc
在您的.bashrc文件末尾添加如下内容（根据你的实际情况替换yourproxyaddress和proxyport）。
http_proxy=http://yourproxyaddress:proxyport 
export http_proxy
保存文件。关闭当前终端，然後打开另一个终端。
使用apt-get update或者任何您想用的网络工具测试代理。我使用firestarter查看活动的网络连接。
如果您为了纠正错误而再次修改了配置文件，记得关闭终端并重新打开，否则新的设置不会生效。
代理服务器的登录
如果代理服务器需要登录，那么可以在指定代理服务器地址的时候，用如下格式（根据情况把username，password， yourproxyaddress和proxyport替换为相应内容）：
http_proxy=http://username:password@yourproxyaddress:proxyport