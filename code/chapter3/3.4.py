# -*- coding: utf-8 -*-
import numpy
import cv2

'''
同CaptureManager和WindowsManager类一样，滤波器filter也需要能在cameo外复用。filter.py中就添加一些滤波函数和类。里面引用过的util.py，就存放一些更通用的数学函数。这两个文件与cameo.py放在同一级目录。

一、边缘检测：
1、边缘在人类视觉和计算机视觉中都起着重要作用。opencv中提供了很多边缘检测铝箔函数，包括Laplacian()、Sobel()和Scharr()。这些滤波函数都会将非边缘区域转为黑色，将边缘区域转为白色或其它饱和色。
2、但是，这些函数都很容易将噪声错误的识别为边缘，缓解这个问题的方法是在找到边缘之前先对图像进行模糊处理。opencv中的模糊函数有blur()、medianBlur()、GaussianBlur()等。
3、边缘滤波函数和模糊函数的参数有很多，但总有一个ksize参数，它是一个技术，表示滤波核的宽和高。
4、这里的例子，边缘检测方案就是medianBlur()作为模糊函数，它对出去数字化的视频噪声非常有效，特别是彩色图像的噪声，Laplacian()作为边缘检测函数，它会产生明显的边缘线条，灰度图像更是如此。这部分功能代码放在filter.py。

二、用定制内核做卷积（教程3.5）
这部分概念很重要，尤其要理解内核的概念及其应用。这章就不做笔记了，通篇都需要理解。之后就是要在filter.py中添加两个类，分别实现卷积滤波器和锐化滤波器。

三、接下来就是应用上面的各种工具（3.6）
这部分代码放到cameo.py中。不过代码写到这里，还运行不了，教程中并没有把所有代码展示出来。只有上git获取最新代码了。这里重在思想，运行是其次，毕竟还有很多opencv自己提供的效果很不错的滤波函数。真正需要我们自己来玩铝箔函数的时候，也不是没法解决。到时候再研究git上的源码吧。

四、Canny边缘检测
opencv提供的Canny函数不仅效果好，而且使用简便。其检测算法非常复杂，由五个步骤组成：
1、ongoing高斯滤波器对图像进行去噪
2、计算梯度
3、在边缘使用非最大抑制（NMS）
4、在检测到的边缘上使用双阀值去除假阳性
5、分析所有的边缘及其之间的连接，以保留真正的边缘并消除不明显的边缘

'''















